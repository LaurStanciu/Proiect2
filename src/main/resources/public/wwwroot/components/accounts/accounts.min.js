!function(){"use strict";function t(t,n,e,o,r,a,i,s,c,u){a.accounts=n,a.data=e,a.accountExists=!1,a.incorrectCredentials=!1,a.vm={signIn:{},signUp:{}},a.events={signIn:function(){a.progressbar&&a.progressbar.complete(),a.progressbar=c.createInstance(),a.progressbar.start(),r.post("/api/accounts/sign-in",a.vm.signIn).then(function(n){1==n.data.type&&(a.progressbar.complete(),t.loginDetails.email=a.vm.signIn.email,t.loginDetails.logged=!0,i.go("search"),a.createToasts.toastSuccess()),3==n.data.type&&(a.progressbar.complete(),a.incorrectCredentials=!0,a.createToasts.toastFailed())},function(t){return a.progressbar.complete(),a.createToasts.toastFailed(),t})},signUp:function(){a.accountExists=!1,a.progressbar&&a.progressbar.complete(),a.progressbar=c.createInstance(),a.progressbar.start(),r.post("/api/accounts/sign-up",a.vm.signUp).then(function(t){1==t.data.type&&(a.progressbar.complete(),i.go("accounts.sign-in"),a.createToasts.toastSuccess()),3==t.data.type&&(a.progressbar.complete(),a.accountExists=!0,a.createToasts.toastFailed())},function(t){return a.progressbar.complete(),a.createToasts.toastFailed(),t})},signOut:function(){t.loginDetails.email="",t.loginDetails.logged=!1,i.go("accounts.sign-in")}},a.createToasts={toastSuccess:function(){u.create({className:" bg-success text-white",content:"<p>Success!</p>",timeout:1500})},toastWarning:function(t){var n=t;""!==t&&null!==t||(n="Warning");var e="<p>"+n+"</p>";u.create({className:" bg-warning text-white",content:e,timeout:1500})},toastFailed:function(){u.create({className:" bg-danger text-white",content:"<p>Failed!</p>",timeout:1500})}}}angular.module("app").controller("accountsCtrl",t),t.$inject=["$rootScope","accounts","data","$location","$http","$scope","$state","$stateParams","ngProgressBar","ngToast"]}(),function(){"use strict";function t(t,n,e,o,r){var a={identity:{},contents:null},i={identity:function(){var t=e.location.newURL(!0,{api:"api",controller:"accounts",action:"identity"});return n.post(t).then(function(t){return t},function(t){return t})},signOut:function(){var t=e.location.newURL(!0,{api:"api",controller:"accounts",action:"sign-Out"});return n.post(t).then(function(t){return t},function(t){return t})},signUp:function(t){var o=e.location.newURL(!0,{api:"api",controller:"accounts",action:"sign-Up"});return n.post(o,t).then(function(t){return t},function(t){return t})},signIn:function(t){var o=e.location.newURL(!0,{api:"api",controller:"accounts",action:"sign-in"});return n.post(o,t).then(function(t){return t},function(t){return t})},getContents:function(t,o){var r=$.extend({},{id:0},t),a=$.extend({},{role:null,country:null,language:null},o),i=e.location.newURL(!0,{api:"api",controller:"accounts",id:r.id,segments:["contents"]},a);return n.get(i).then(function(t){return t},function(t){return t})},updateContents:function(t,o,r){var a=$.extend({},{id:0},t),i=$.extend({},{role:null,country:null,language:null},o),s=e.location.newURL(!0,{api:"api",controller:"accounts",id:a.id,segments:["contents"]},i);return n.post(s,r).then(function(t){return t},function(t){return t})}},s={};return s.identity=function(){return t.loginDetails.email},s.loadIdentity=function(){return i.identity().then(function(t){return 200==t.status&&(a.identity=$.extend(!0,{},t.data)),t})},s.isAuthenticated=function(){return t.loginDetails.logged},s.signIn=function(t){return i.signOut().then(function(n){return a.identity={},i.signIn(t)}).then(function(t){return t})},s.signUp=function(t){return i.signOut().then(function(n){return i.signUp(t)}).then(function(t){return t})},s.signOut=function(){return i.signOut().then(function(t){return a.identity={},t}).then(function(){setTimeout(function(){window.location.reload(!1)},100)})},s.sref=function(t){var n=$.extend(!0,{},{state:"sign-in"},t),e=o.search().returnState,a=o.search().returnStateParams;e=e?e:encodeURIComponent(r.current.name),a=a?a:encodeURIComponent(JSON.stringify(r.params)),r.go(n.state,{returnState:e,returnStateParams:a},{reload:!0,notify:!0})},s.getContents=function(){return t.loginDetails.email},s.updateContents=function(t,n,e){return i.updateContents(t,n,e).then(function(t){return t})},s.load=function(t){if(t||null==a.identity.Id)return s.loadIdentity()},s}angular.module("app").factory("accounts",t),t.$inject=["$rootScope","$http","data","$location","$state"]}();